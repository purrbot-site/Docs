{
  "openapi": "3.1.0",
  "info": {
    "title": "Purrbot API",
    "description": "The Purrbot API (Formerly Purrbot Image API) is an open-source API that currently provides the following features:\n\n- Receive a randomly selected image link based on the selected image path.\n- Receive a list of image links based on the selected image path.\n- \"OWOify\" provided text, replacing specific characters with other values.\n\n## Testing connection\n\nThis page does not support directly testing API endpoints. Instead are you required to use a tool such as [cURL](https://curl.se) or [Postman](https://www.postman.com) to access and test API paths.\n\nTo test it, connect to `https://api.purrbot.site` and look for a response similar to the following:  \n```json\n{\n  \"name\": \"Purrbot API\",\n  \"version\": \"2.2.0\",\n  \"description\": \"A public API made for the Discord Bot *Purr* that contains random image and text features.\",\n  \"links\": {\n    \"documentation\": \"https://docs.purrbot.site/api\",\n    \"source\": \"https://github.com/purrbot-site/ImageAPI\",\n    \"api\": \"https://api.purrbot.site/v2\",\n    \"legal\": \"https://docs.purrbot.site/legal/api\"\n  },\n  \"license\": {\n    \"type\": \"MIT\",\n    \"link\": \"https://github.com/purrbot-site/ImageAPI/blob/master/LICENSE\"\n  }\n}\n```\nShould you receive this or a similar response can you obtain the current API domain from the `links` object.\n\n## Versioning\n\nThe versioning of the API is simple.  \nWhenever the API receives a breaking change will the version in the URL path get bumped.\n\nWhere possible will we try to still support the old API path for a while to allow an easier migration to the new version.\n\n### Current API deprecations\n\nThe following API URL paths are currently considered deprecated and will be removed in the future:\n\n- `https://purrbot.site/api` (switch to `https://api.purrbot.site/v2`)",
    "termsOfService": "https://docs.purrbot.site/legal/api",
    "contact": {
      "email": "support@purrbot.site"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/purrbot-site/ImageAPI/blob/master/LICENSE"
    },
    "version": "2.2.0"
  },
  "servers": [
    {
      "url": "https://api.purrbot.site/v2",
      "description": "Main API endpoint to use."
    },
    {
      "url": "https://purrbot.site/api",
      "description": "[DEPRECATED] Old API Endpoint."
    }
  ],
  "tags": [
    {
      "name": "sfw",
      "description": "Safe for Work endpoints"
    },
    {
      "name": "nsfw",
      "description": "Not safe for Work endpoints"
    },
    {
      "name": "misc",
      "description": "Miscellaneous Endpoints"
    }
  ],
  "paths": {
    "/img/sfw/angry/gif": {
      "get": {
        "summary": "Get a random angry gif",
        "description": "Returns a randomly selected gif of someone being angry.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/angry/gif/angry_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/angry/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/angry",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/background/img": {
      "get": {
        "summary": "Get a random background image",
        "description": "Returns a randomly selected background image used in the bots welcome feature.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/background/color_black.png",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/background/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/background",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/bite/gif": {
      "get": {
        "summary": "Get a random bite gif",
        "description": "Returns a randomly selected bite gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/bite/gif/bite_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/bite/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/bite",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/blush/gif": {
      "get": {
        "summary": "Get a random blush gif",
        "description": "Returns a randomly selected blush gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/blush/gif/blush_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/blush/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/blush",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/comfy/gif": {
      "get": {
        "summary": "Get a random comfy gif",
        "description": "Returns a randomly selected comfy gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/comfy/gif/comfy_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/comfy/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/comfy",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/cry/gif": {
      "get": {
        "summary": "Get a random cry gif",
        "description": "Returns a randomly selected cry gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/cry/gif/cry_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/cry/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/cry",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/cuddle/gif": {
      "get": {
        "summary": "Get a random cuddle gif",
        "description": "Returns a randomly selected cuddle gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/cuddle/gif/cuddle_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/cuddle/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/cuddle",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/dance/gif": {
      "get": {
        "summary": "Get a random dance gif",
        "description": "Returns a randomly selected dance gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/dance/gif/dance_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/dance/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/dance",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/eevee/{type}": {
      "get": {
        "summary": "Get a random Gif or Image of Eevee",
        "description": "Returns a randomly selected Gif or Image of the Pokemon Eevee, depending on the provided `{type}`",
        "tags": [
          "sfw"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of media to return.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gif",
                "img"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "examples": {
                  "Gif": {
                    "value": {
                      "link": "https://cdn.purrbot.site/sfw/eevee/gif/eevee_001.gif",
                      "error": false,
                      "time": 0
                    }
                  },
                  "Img": {
                    "value": {
                      "link": "https://cdn.purrbot.site/sfw/eevee/img/eevee_001.jpg",
                      "error": false,
                      "time": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/eevee/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/eevee",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/fluff/gif": {
      "get": {
        "summary": "Get a random fluff gif",
        "description": "Returns a randomly selected fluff gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/fluff/gif/fluff_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/fluff/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/fluff",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/holo/img": {
      "get": {
        "summary": "Get a random holo image",
        "description": "Returns a randomly selected image from Holo of the anime \"Spice and Wolf\".",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/holo/img/holo_001.jpg",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/holo/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/holo",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/hug/gif": {
      "get": {
        "summary": "Get a random hug gif",
        "description": "Returns a randomly selected hug gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/hug/gif/hug_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/hug/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/hug",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/icon/img": {
      "get": {
        "summary": "Get a random icon image",
        "description": "Returns a randomly selected icon image used in the bots welcome feature.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/icon/img/icon_001.jpg",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/icon/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/icon",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/kiss/gif": {
      "get": {
        "summary": "Get a random kiss gif",
        "description": "Returns a randomly selected kiss gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/kiss/gif/kiss_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/kiss/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/kiss",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/kitsune/img": {
      "get": {
        "summary": "Get a random kitsune image",
        "description": "Returns a randomly selected kitsune image.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/kitsune/img/kitsune_001.jpg",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/kitsune/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/kitsune",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/lay/gif": {
      "get": {
        "summary": "Get a random gif of someone laying down",
        "description": "Returns a randomly selected gif of someone laying down/resting.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/lay/gif/lay_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/lay/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/lay",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/lick/gif": {
      "get": {
        "summary": "Get a random lick gif",
        "description": "Returns a randomly selected lick gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/lick/gif/lick_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/lick/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/lick",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/neko/{type}": {
      "get": {
        "summary": "Get a random Gif or Image of a Neko",
        "description": "Returns a randomly selected Gif or Image of a Neko (Cat girl), depending on the provided `{type}`",
        "tags": [
          "sfw"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of media to return.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gif",
                "img"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "examples": {
                  "Gif": {
                    "value": {
                      "link": "https://cdn.purrbot.site/sfw/neko/gif/neko_001.gif",
                      "error": false,
                      "time": 0
                    }
                  },
                  "Img": {
                    "value": {
                      "link": "https://cdn.purrbot.site/sfw/neko/img/neko_001.jpg",
                      "error": false,
                      "time": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/neko/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/neko",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/okami/img": {
      "get": {
        "summary": "Get a random okami image",
        "description": "Returns a randomly selected okami (Fox girl) image.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/okami/img/okami_001.jpg",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/okami/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/okami",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/pat/gif": {
      "get": {
        "summary": "Get a random pat gif",
        "description": "Returns a randomly selected pat gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/pat/gif/pat_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/pat/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/pat",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/poke/gif": {
      "get": {
        "summary": "Get a random poke gif",
        "description": "Returns a randomly selected poke gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/poke/gif/poke_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/poke/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/poke",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/pout/gif": {
      "get": {
        "summary": "Get a random pouting gif",
        "description": "Returns a randomly selected gif of someone pouting.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/pout/gif/pout_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/pout/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/pout",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/senko/img": {
      "get": {
        "summary": "Get a random senko image",
        "description": "Returns a randomly selected senko image.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/senko/img/senko_001.jpg",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/senko/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/senko",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/shiro/img": {
      "get": {
        "summary": "Get a random shiro image",
        "description": "Returns a randomly selected shiro image.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/shiro/img/shiro_001.jpg",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/shiro/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/shiro",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/slap/gif": {
      "get": {
        "summary": "Get a random slap gif",
        "description": "Returns a randomly selected slap gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/slap/gif/slap_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/slap/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/slap",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/smile/gif": {
      "get": {
        "summary": "Get a random smile gif",
        "description": "Returns a randomly selected smile gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/smile/gif/smile_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/smile/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/smile",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/tail/gif": {
      "get": {
        "summary": "Get a random tail wagging gif",
        "description": "Returns a randomly selected tail wagging gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/tail/gif/tail_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/tail/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/tail",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/sfw/tickle/gif": {
      "get": {
        "summary": "Get a random tickle gif",
        "description": "Returns a randomly selected tickle gif.",
        "tags": [
          "sfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/sfw/tickle/gif/tickle_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/tickle/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/sfw/tickle",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/list/sfw/{path}": {
      "get": {
        "summary": "Get all available images of the path",
        "description": "Returns a list of all available images (as URLs) from the provided `{path}`",
        "tags": [
          "sfw"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "The path to list all available images in. Allowed are all available `/api/img/sfw/` paths.",
            "example": "background/img",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSuccess"
                },
                "example": {
                  "links": [
                    "https://cdn.purrbot.site/sfw/background/img/color_black.png",
                    "https://cdn.purrbot.site/sfw/background/img/color_blue.png",
                    "https://cdn.purrbot.site/sfw/background/img/color_blurple.png",
                    "https://cdn.purrbot.site/sfw/background/img/color_green.png",
                    "https://cdn.purrbot.site/sfw/background/img/color_grey.png",
                    "https://cdn.purrbot.site/sfw/background/img/color_red.png",
                    "https://cdn.purrbot.site/sfw/background/img/color_white.png",
                    "https://cdn.purrbot.site/sfw/background/img/gradient.png",
                    "https://cdn.purrbot.site/sfw/background/img/gradient_blue.png",
                    "https://cdn.purrbot.site/sfw/background/img/gradient_dark_red.png",
                    "https://cdn.purrbot.site/sfw/background/img/gradient_green.png",
                    "https://cdn.purrbot.site/sfw/background/img/gradient_orange.png",
                    "https://cdn.purrbot.site/sfw/background/img/gradient_red.png",
                    "https://cdn.purrbot.site/sfw/background/img/rainbow.png"
                  ],
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/list/sfw/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/list/sfw/",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/anal/gif": {
      "get": {
        "summary": "Get a random anal sex gif",
        "description": "Returns a randomly selected anal sex gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/anal/gif/anal_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/anal/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/anal",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/blowjob/gif": {
      "get": {
        "summary": "Get a random blowjob gif",
        "description": "Returns a randomly selected blowjob gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/blowjob/gif/blowjob_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/blowjob/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/blowjob",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/cum/gif": {
      "get": {
        "summary": "Get a random cum gif",
        "description": "Returns a randomly selected cum gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/cum/gif/cum_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/cum/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/cum",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/fuck/gif": {
      "get": {
        "summary": "Get a random fuck gif",
        "description": "Returns a randomly selected fuck gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/fuck/gif/fuck_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/fuck/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/fuck",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/neko/{type}": {
      "get": {
        "summary": "Get a random Gif or Image of a Neko",
        "description": "Returns a randomly selected Gif or Image of a Neko (Cat girl), depending on the provided `{type}`",
        "tags": [
          "nsfw"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of media to return.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gif",
                "img"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "examples": {
                  "Gif": {
                    "value": {
                      "link": "https://cdn.purrbot.site/nsfw/neko/gif/neko_001.gif",
                      "error": false,
                      "time": 0
                    }
                  },
                  "Img": {
                    "value": {
                      "link": "https://cdn.purrbot.site/nsfw/neko/img/neko_001.jpg",
                      "error": false,
                      "time": 0
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/neko/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/neko",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/pussylick/gif": {
      "get": {
        "summary": "Get a random pussylick gif",
        "description": "Returns a randomly selected pussylick gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/pussylick/gif/pussylick_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/pussylick/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/pussylick",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/solo/gif": {
      "get": {
        "summary": "Get a random solo masturbation gif",
        "description": "Returns a randomly selected solo masturbation gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/solo/gif/solo_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/solo/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/solo",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/solo_male/gif": {
      "get": {
        "summary": "Get a random solo masturbation gif of a man",
        "description": "Returns a randomly selected solo masturbation gif of a man.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/solo_male/gif/solo_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/solo_male/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/solo_male",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/threesome_fff/gif": {
      "get": {
        "summary": "Get a random threesome (Females only) gif",
        "description": "Returns a randomly selected threesome (Females only) gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/threesome_fff/gif/threesome_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/threesome_fff/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/threesome_fff",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/threesome_ffm/gif": {
      "get": {
        "summary": "Get a random threesome (2 Females, 1 Male) gif",
        "description": "Returns a randomly selected threesome (2 Females, 1 Male) gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/threesome_ffm/gif/threesome_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/threesome_ffm/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/threesome_ffm",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/threesome_mmf/gif": {
      "get": {
        "summary": "Get a random threesome (2 Males, 1 Female) gif",
        "description": "Returns a randomly selected threesome (2 Males, 1 Female) gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/threesome_mmf/gif/threesome_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/threesome_mmf/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/threesome_mmf",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/yaoi/gif": {
      "get": {
        "summary": "Get a random yaoi (gay) gif",
        "description": "Returns a randomly selected yaoi (gay) gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/yaoi/gif/yaoi_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/yaoi/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/yaoi",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/img/nsfw/yuri/gif": {
      "get": {
        "summary": "Get a random yuri (lesbian) gif",
        "description": "Returns a randomly selected yuri (lesbian) gif.",
        "tags": [
          "nsfw"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImgSuccess"
                },
                "example": {
                  "link": "https://cdn.purrbot.site/nsfw/yuri/gif/yuri_001.gif",
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/yuri/invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/yuri",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/list/nsfw/{path}": {
      "get": {
        "summary": "Get all available images of the path",
        "description": "Returns a list of all available images (as URLs) from the provided `{path}`",
        "tags": [
          "nsfw"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "The path to list all available images in. Allowed are all available `/api/img/nsfw/` paths.",
            "example": "anal/gif",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSuccess"
                },
                "example": {
                  "links": [
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_001.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_002.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_003.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_004.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_005.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_006.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_007.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_008.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_009.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_010.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_011.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_012.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_013.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_014.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_015.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_016.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_017.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_018.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_019.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_020.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_021.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_022.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_023.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_024.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_025.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_026.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_027.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_028.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_029.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_030.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_031.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_032.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_033.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_034.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_035.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_036.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_037.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_038.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_039.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_040.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_041.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_042.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_043.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_044.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_045.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_046.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_047.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_048.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_049.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_050.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_051.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_052.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_053.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_054.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_055.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_056.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_057.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_058.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_059.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_060.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_061.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_062.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_063.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_064.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_065.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_066.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_067.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_068.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_069.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_070.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_071.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_072.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_073.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_074.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_075.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_076.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_077.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_078.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_079.gif",
                    "https://cdn.purrbot.site/nsfw/anal/gif/anal_080.gif"
                  ],
                  "error": false,
                  "time": 0
                }
              }
            }
          },
          "403": {
            "description": "Invalid path provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw//invalid",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path is not valid.",
                  "time": 0
                }
              }
            }
          },
          "404": {
            "description": "Path doesn't contain images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/img/nsfw/",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "The provided path does not contain any images.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/owoify": {
      "post": {
        "summary": "OWOify text",
        "description": "\"OWOifies\" text, meaning it replaces characters and words with others, depending on the provided configuration.\nMultiple configurations can be set via additional JSON properties:\n\n- Only `text`: Replaces `l` and `r` with `w` (Respects casing).\n- `replace-words`: Replaces specific key-words with others.\n- `stutter`: Randomly makes some word stutter by repeating the first character followed by a hyphon.\n- `emoticons`: Replaces punctuation characters (`.!?`) with random text emoticons.",
        "tags": [
          "misc"
        ],
        "requestBody": {
          "description": "The JSON Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OWOifyRequest"
              },
              "example": {
                "text": "Hello World!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OWOifySuccess"
                },
                "example": {
                  "error": false,
                  "text": "Hewwo Wowd owo",
                  "time": 0
                }
              }
            }
          },
          "400": {
            "description": "Received Malformed JSON Body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/owoify",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "Received JSON Body does not contain a 'text' value.",
                  "time": 0
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "OWOify text",
        "description": "\"OWOifies\" text, meaning it replaces characters and words with others, depending on the provided configuration.\nMultiple configurations can be set via additional query parameters:\n\n- Only `text`: Replaces `l` and `r` with `w` (Respects casing).\n- `replace-words`: Replaces specific key-words with others.\n- `stutter`: Randomly makes some word stutter by repeating the first character followed by a hyphon.\n- `emoticons`: Replaces punctuation characters (`.!?`) with random text emoticons.",
        "tags": [
          "misc"
        ],
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "The text to OwOify.",
            "example": "Hello World!",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace-words",
            "in": "query",
            "description": "Whether to replace specific key-words with others.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "stutter",
            "in": "query",
            "description": "Whether stuttering should be added.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "emoticons",
            "in": "query",
            "description": "Whether to replace punctuation characters (`.!?`) with random emoticons.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OWOifySuccess"
                },
                "example": {
                  "error": false,
                  "text": "Hewwo Wowd owo",
                  "time": 0
                }
              }
            }
          },
          "400": {
            "description": "Received Malformed Query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestFailure"
                },
                "example": {
                  "details": {
                    "path": "/api/owoify",
                    "content-type": "application/json",
                    "user-agent": "Some_User-Agent/1.0"
                  },
                  "error": true,
                  "message": "Received request does not contain a 'text' query parameter, or it was empty.",
                  "time": 0
                }
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "summary": "Provides info about the API",
        "description": "Returns info about the API including version, license, source code link, etc.",
        "tags": [
          "misc"
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoSuccess"
                },
                "example": {
                  "name": "Purrbot ImageAPI",
                  "version": "2.0.0",
                  "description": "A public API made for the Discord Bot *Purr* that contains random image and text features.",
                  "links": {
                    "documentation": "https://docs.purrbot.site/api",
                    "source": "https://github.com/purrbot-site/ImageAPI",
                    "api": "https://api.purrbot.site/v2"
                  },
                  "license": {
                    "type": "MIT",
                    "link": "https://github.com/purrbot-site/ImageAPI/blob/master/LICENSE"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ImgSuccess": {
        "type": "object",
        "description": "A successful response returning a randomly selected image link.",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether the response is an error response. Always `false` for this response type."
          },
          "link": {
            "type": "string",
            "description": "URL of the randomly selected image file."
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "How long the request took to be processed (in milliseconds)."
          },
          "deprecation-warning": {
            "type": "string",
            "description": "Warning about the deprecation of the accessed endpoint. Not present for https://api.purrbot.site/v2 endpoints."
          }
        }
      },
      "ListSuccess": {
        "type": "object",
        "description": "A success response returning a list of all available image links.",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether the response is an error response. Always `false` for this response type."
          },
          "links": {
            "type": "array",
            "description": "List of Image URLs found within the provided path.",
            "items": {
              "type": "string"
            }
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "How long the request took to be processed (in milliseconds)."
          },
          "deprecation-warning": {
            "type": ["string", "null"],
            "description": "Warning about the deprecation of the accessed endpoint. Not present for https://api.purrbot.site/v2 endpoints."
          }
        }
      },
      "OWOifySuccess": {
        "type": "object",
        "description": "A successful OWOify response returning the converted text.",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether the response is an error response. Always `false` for this response type."
          },
          "text": {
            "type": "string",
            "description": "The OwOified text."
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "How long the request took to be processed (in milliseconds)."
          },
          "deprecation-warning": {
            "type": ["string", "null"],
            "description": "Warning about the deprecation of the accessed endpoint. Not present for https://api.purrbot.site/v2 endpoints."
          }
        }
      },
      "InfoSuccess": {
        "type": "object",
        "description": "A successful response containing API information.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the API."
          },
          "version": {
            "type": "string",
            "description": "Current version used of the API."
          },
          "description": {
            "type": "string",
            "description": "Description of the API."
          },
          "links": {
            "$ref": "#/components/schemas/LinksContent"
          },
          "license": {
            "$ref": "#/components/schemas/LicenseContent"
          }
        }
      },
      "RequestFailure": {
        "type": "object",
        "description": "A failed response for an API request.",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/DetailsContent"
          },
          "error": {
            "type": "boolean",
            "description": "Whether the response is an error response. Always `true` for this response type."
          },
          "message": {
            "type": "string",
            "description": "The error message."
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "How long the request took to be processed (in milliseconds)."
          }
        }
      },
      "DetailsContent": {
        "type": "object",
        "description": "A JSON object nested in a failed response containing request information.",
        "properties": {
          "path": {
            "type": "string",
            "description": "The API path that was used by the user."
          },
          "content-type": {
            "type": "string",
            "description": "The content-type header the user provided."
          },
          "user-agent": {
            "type": "string",
            "description": "The User-Agent header the user provided."
          }
        }
      },
      "LinksContent": {
        "type": "object",
        "description": "A JSON object nested in the API info response containing useful links.",
        "properties": {
          "documentation": {
            "type": "string",
            "description": "Link to the API documentation."
          },
          "source": {
            "type": "string",
            "description": "Link to the Source Code of the API."
          },
          "api": {
            "type": "string",
            "description": "API link that can be used for requests."
          }
        }
      },
      "LicenseContent": {
        "type": "object",
        "description": "A JSON object nested in the API info response containing License-related info.",
        "properties": {
          "type": {
            "type": "string",
            "description": "License Type (Name of the license)."
          },
          "link": {
            "type": "string",
            "description": "Link to the License file."
          }
        }
      },
      "OWOifyRequest": {
        "type": "object",
        "description": "A JSON object for a proper POST request towards the OWOify endpoint.",
        "required": ["text"],
        "properties": {
          "text": {
            "type": "string",
            "description": "Text to OwOify."
          },
          "replace-words": {
            "type": "boolean",
            "description": "Whether to replace specific key-words with others"
          },
          "stutter": {
            "type": "boolean",
            "description": "Whether stuttering should be added."
          },
          "emoticons": {
            "type": "boolean",
            "description": "Whether to replace punctuation characters (`.!?`) with random emoticons."
          }
        }
      }
    }
  }
}
